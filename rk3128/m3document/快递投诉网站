快递投诉网站
国家邮政局申诉网站
sswz.spb.gov.cn/index.d




/home/duanshuai/openssl/bin/openssl req -newkey rsa:2048 -x509 -nodes -sha512 -days 3650 -extensions v3_ca -keyout ca.key -out ca.crt -subj "/CN=An MQTTbroker/O=OwnTracks.org/OU=generate-CA/emailAddress=nobody@example.net"


/home/duanshuai/openssl/bin/openssl x509 -in ca.crt -nameopt multiline -subject -noout



openssl req -newkey rsa:2048 -x509 -nodes -sha512 -days 3650 -extensions v3_ca -keyout ca.key -out ca.crt -subj "/CN=An MQTTbroker/O=OwnTracks.org/OU=generate-CA/emailAddress=nobody@example.net"

openssl x509 -in ca.crt -nameopt multiline -subject -noout








数据加密的三种方式：对称加密，私钥加密和公钥加密

公钥加密速度慢，所有人都能获取，能用私钥解密
对称加密速度快

一般使用在数据传输过程中，因为对称加密速度快，所以使用对称秘钥对数据进行加密，然后再使用对方的公钥对对称秘钥进行加密
当对方收到了数据之后，先用自己的私钥对数据进行解密获取对称秘钥，然后使用对称秘钥对数据进行解密，就获得了正确的数据。

对于数据完整性和一致性，采用单相加密算法，通过hash计算出独一无二的校验码，称之为信息摘要(Message Digest)。
对于数据来源可靠性，使用自己的公钥加密即可验证身份。但是私钥速度慢，所以仅仅用私钥加密摘要信息，加密后的摘要信息成为数字签名(Signature)。

用户获得了数字签名后的数据，首先使用数据来源方的公钥解密，这样获得了数据和信息摘要部分，并确认了数据来源的可靠性。由于这时候数据部分没有被加密，所以用户也可以使用同种单向加密算法计算出摘要信息，然后对比来源方的摘要信息和自己计算出来的摘要信息，如果相等则证明数据完全未被修改过，是完整一致的。

因此只要使用数字签名就能保证数据来源的可靠性、数据的完整性和一致性。

发送方对待发送的数据使用hash算法获得摘要，使用自己的私钥对摘要进行加密获取数字证书
接收方接收到数据后使用对方的公钥对数字证书进行解密获得摘要，对数据使用hash算法获得新摘要，对比新摘要和解密出来的摘要，如果相同则数据合法。


CA是数字证书认证中心，申请者提交自己的公钥个人信息给CA，CA对这些信息单向加密生成摘要信息，然后使用自己的私钥加密整个摘要信息，这样就得到了CA对申请者的数字签名，在数字签名上再加上CA自己的一些信息以及该证书的信息，就得到了所谓的数字证书。





单向验证，只验证服务端
1.访问者给出协议版本号，一个客户端随机数(client random)，以及客户端支持的加密方法。
2.Server确认双方使用的加密方法，以及一个服务器生成的随机数(server random).
3.server发送数字证书给访问者
4.访问者确认数字证书有效。并使用信任的CA的公钥解密数字证书来获取server的公钥，然后生成一个新的随机数(称为预备主秘钥),并使用server的公钥加密预备主秘钥发给server。
5.server使用自己的私钥，解密访问者发来的预备主秘钥。
6.访问者和server双方都具有了(客户端随机数+服务端随机数+预备主秘钥)，他们都根据约定的加密方法，使用这三个随机数生成对称秘钥-主秘钥，用来加密接下来的整个对话过程。
7.在双方验证完主秘钥的有效性之后，SSL握手机制就结束了。



ssl对数据进行加密，采用非对称加密的方式，因为对成加密在传输过程中需要把秘钥发送给接收方，这一过程中可能导致秘钥泄漏，数据安全不能保证。
采用非对成加密，数据在发送时先用接收方的公钥对数据进行加密，在接受方接收到数据时，再用自己的私钥对数据进行解密，这样能够有效的保证数据安全。
非对成加密一般采用rsa算法，秘钥长度一般时2048或1024，加密的过程耗时时间比较长，所以在数据传输过程中，通常是先对数据进行hash运算，计算出来一个唯一的值，称为摘要。
然后对摘要进行非对唱加密，产生的就是证书。接收方接收到了数据之后，先用自己的私钥对接收到的包进行解密获得摘要，然后对数据使用hash运算得到一个新的摘要，比较这两个摘要，如果两者相同，就说明数据是安全有效的。







